    //Tim kiem nhi phan
    class Binary_Search
    {
        public static int BinarySearch(int[] a,int l,int r,int x)
        {
            if(r >= l)
            {
                int mid = (l + r) / 2;

                //if the element is present at the
                //middle it self
                if(a[mid] == x)
                {
                    return mid;
                }

                //if element is smaller than mid, then
                //it can only be present in left array
                if(a[mid] > x)
                {
                    return BinarySearch(a, l, mid - 1, x);
                }
                //Else the element can only be present
                //in right subarray
                return BinarySearch(a, mid + 1, r, x);
            }

            //we reach here when element is not present
            //in array
            return -1;
        }
    }
    
    //Tim kiem tuan tu
    class Linear_Search
    {
        public static int linearExhaustive(int[] a, int x)
        {
            int i = 0;

            while (i < a.Length)
            {
                if (a[i] == x)
                {
                    break;
                }
                i++;
            }
            return i;
        }
        public static int linearSentinel(int[] a, int x)
        {
            //Buoi 1: Khoi tao i
            int i = 0;
            //Buoc 2: them phan tu can tim vao cuoi mang a
            int[] b = new int[a.Length + 1];

            for (int j = 0; j < a.Length; j++)
            {
                b[j] = a[j];
            }
            b[a.Length] = x;
            while (b[i] != x)
            {
                i++;
            }
            return i;
        }
    }
